<CheckBox x:Class="MsmhToolsWpfClass.WpfToggleSwitch"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:local="clr-namespace:MsmhToolsWpfClass"
          xmlns:themes="clr-namespace:MsmhToolsWpfClass.Themes"
          mc:Ignorable="d"
          d:DataContext="{d:DesignInstance local:WpfToggleSwitch, IsDesignTimeCreatable=True}">

    <CheckBox.Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static themes:AppTheme.BackgroundBrush}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AppTheme.BorderBrush}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AppTheme.ForegroundBrush}}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Viewbox Stretch="{Binding Stretch}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="PART_ContentLeft" Grid.Column="0" Content="{Binding ContentLeft}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                                <Border x:Name="PART_MainBorder" Grid.Column="1" Margin="0" CornerRadius="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight, Converter={x:Static local:DivideConverter.Instance}, ConverterParameter=2.0}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid>
                                        <TextBlock Text="MSMH" Opacity="0"/>
                                        <Border x:Name="PART_Bar" Opacity="1"
                                                Margin="{Binding ElementName=PART_Canvas, Path=ActualHeight, Converter={x:Static local:DivideConverter.Instance}, ConverterParameter=4.0}"
                                                CornerRadius="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight, Converter={x:Static local:DivideConverter.Instance}, ConverterParameter=2.0}"
                                                Background="{Binding SwitchBarBrush}"
                                                BorderBrush="Transparent" BorderThickness="0"/>
                                        <Canvas x:Name="PART_Canvas" Margin="1" HorizontalAlignment="Left" Width="{Binding ElementName=PART_MainBorder, Path=Width}"  Height="{Binding ElementName=PART_MainBorder, Path=Height}">
                                            <Ellipse x:Name="PART_Ellipse" Canvas.Left="0" Canvas.Top="0" HorizontalAlignment="Left" Height="{Binding ElementName=PART_Canvas, Path=ActualHeight}" Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}"
                                                     Fill="{Binding SwitchBrush}"
                                                     Stroke="{Binding SwitchStrokeBrush}"
                                                     StrokeThickness="1" RenderTransformOrigin="0.5,0.5"/>
                                        </Canvas>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="PART_Content" Grid.Column="2" Content="{Binding Content}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                            </Grid>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding HasContentLeft}" Value="true">
                                <Setter Property="Margin" TargetName="PART_ContentLeft" Value="0,0,4,0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HasContent}" Value="true">
                                <Setter Property="Margin" TargetName="PART_Content" Value="4,0,0,0"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" TargetName="PART_MainBorder" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AppTheme.MediumSeaGreenBrush}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="templateRoot" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </CheckBox.Style>
    
</CheckBox>
