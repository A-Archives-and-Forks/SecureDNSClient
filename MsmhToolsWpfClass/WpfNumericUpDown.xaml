<Control x:Class="MsmhToolsWpfClass.WpfNumericUpDown"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MsmhToolsWpfClass"
             xmlns:themes="clr-namespace:MsmhToolsWpfClass.Themes"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance local:WpfNumericUpDown, IsDesignTimeCreatable=True}">
    <Control.Resources>
        <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{Binding Foreground}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:WpfNumericUpDown}}, Path=BorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Control.Resources>

    <Control.Style>
        <Style TargetType="{x:Type Control}">
            <Setter Property="Background" Value="{DynamicResource {x:Static themes:AppTheme.BackgroundBrush}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AppTheme.BorderBrush}}"/>
            <Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AppTheme.BorderThickness}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AppTheme.ForegroundBrush}}"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
                                CornerRadius="{Binding CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid x:Name="MainGrid" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="00000" Visibility="Hidden" Opacity="0" HorizontalAlignment="Stretch"/>
                                <TextBox x:Name="PART_TextBox" Grid.Column="0"
                                         Margin="2,0,0,0"
                                         BorderThickness="0"
                                         HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                         Text="{Binding Value}"
                                         Foreground="{TemplateBinding Foreground}" CaretBrush="{TemplateBinding Foreground}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:WpfNumericUpDown}}, Path=Foreground}"/>
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                                            <Style.Resources>
                                                <Style TargetType="{x:Type Border}">
                                                    <Setter Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:WpfNumericUpDown}}, Path=CornerRadius}"/>
                                                    <Setter Property="Padding" Value="3"/>
                                                </Style>
                                            </Style.Resources>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <Border Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0">
                                    <Grid Margin="{Binding CornerRadius, Converter={x:Static local:CornerRadiusToThicknessConverter.Instance}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <RepeatButton x:Name="PART_UpButton" Grid.Row="0" BorderThickness="0" Margin="0.2" Padding="0" IsTabStop="False"
                                                      HorizontalAlignment="Center" VerticalAlignment="Center"
                                                      HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                                      Width="{Binding Height, Converter={x:Static local:DivideConverter.Instance}, ConverterParameter=2}">
                                            <Path Data="M 10 9 L 10 5 L 5 0 L 0 5 L 0 9 L 5 4 L 10 9 Z" Margin="0" Stretch="Uniform"
                                                  Fill="{Binding Foreground, ElementName=PART_UpButton}"/>
                                        </RepeatButton>
                                        <RepeatButton x:Name="PART_DownButton" Grid.Row="1" BorderThickness="0" Margin="0.2" Padding="0" IsTabStop="False"
                                                      HorizontalAlignment="Center" VerticalAlignment="Center"
                                                      HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                                      Width="{Binding Height, Converter={x:Static local:DivideConverter.Instance}, ConverterParameter=2}">
                                            <Path Data="M 0 0 L 0 4 L 5 9 L 10 4 L 10 0 L 5 5 L 0 0 Z" Margin="0" Stretch="Uniform"
                                                  Fill="{Binding Foreground, ElementName=PART_DownButton}"/>
                                        </RepeatButton>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsFocused}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AppTheme.MediumSeaGreenBrush}}"/>
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="Border" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Control.Style>
</Control>
